lockVersion: 2.0.0
id: 0b775b94-2d74-4b43-bcab-aeed259347d1
management:
  docChecksum: 5e8370ebbd9b700f19c3f9fb03b85421
  docVersion: v1
  speakeasyVersion: 1.636.3
  generationVersion: 2.723.11
  releaseVersion: 0.0.5
  configChecksum: 018329f567528d667289898965569d31
  repoURL: https://github.com/meitner-se/api-client-python.git
  installationURL: https://github.com/meitner-se/api-client-python.git
  published: true
features:
  python:
    additionalDependencies: 1.0.0
    constsAndDefaults: 1.0.5
    core: 5.22.1
    defaultEnabledRetries: 0.2.0
    devContainers: 3.0.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.3.2
    flatRequests: 1.0.1
    flattening: 3.1.1
    globalSecurity: 3.0.4
    globalSecurityCallbacks: 1.0.0
    globalServerURLs: 3.1.1
    groups: 3.0.1
    methodArguments: 1.0.2
    nameOverrides: 3.0.1
    nullables: 1.0.1
    operationTimeout: 0.3.0
    pagination: 3.0.7
    responseFormat: 1.0.1
    retries: 3.0.2
    sdkHooks: 1.1.0
    serverIDs: 3.0.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .vscode/settings.json
  - USAGE.md
  - docs/errors/auditeventsearch422responsebodyerror.md
  - docs/errors/employeecreate422responsebodyerror.md
  - docs/errors/employeeplacementcreate422responsebodyerror.md
  - docs/errors/employeeplacementsearch422responsebodyerror.md
  - docs/errors/employeeplacementupdate422responsebodyerror.md
  - docs/errors/employeesearch422responsebodyerror.md
  - docs/errors/employeeupdate422responsebodyerror.md
  - docs/errors/error400responsebody.md
  - docs/errors/error401responsebody.md
  - docs/errors/error403responsebody.md
  - docs/errors/error404responsebody.md
  - docs/errors/error409responsebody.md
  - docs/errors/error429responsebody.md
  - docs/errors/error500responsebody.md
  - docs/errors/groupcreate422responsebodyerror.md
  - docs/errors/groupsearch422responsebodyerror.md
  - docs/errors/groupupdate422responsebodyerror.md
  - docs/errors/guardiancreate422responsebodyerror.md
  - docs/errors/guardiansearch422responsebodyerror.md
  - docs/errors/guardianupdate422responsebodyerror.md
  - docs/errors/schoolcreate422responsebodyerror.md
  - docs/errors/schoolsearch422responsebodyerror.md
  - docs/errors/schoolupdate422responsebodyerror.md
  - docs/errors/studentcreate422responsebodyerror.md
  - docs/errors/studentplacementcreate422responsebodyerror.md
  - docs/errors/studentplacementsearch422responsebodyerror.md
  - docs/errors/studentplacementupdate422responsebodyerror.md
  - docs/errors/studentsearch422responsebodyerror.md
  - docs/errors/studentupdate422responsebodyerror.md
  - docs/models/auditevent.md
  - docs/models/auditeventfilter.md
  - docs/models/auditeventfiltercontains.md
  - docs/models/auditeventfiltercontainsmeta.md
  - docs/models/auditeventfilterequals.md
  - docs/models/auditeventfilterequalsmeta.md
  - docs/models/auditeventfilterequalsresource.md
  - docs/models/auditeventfilterequalstype.md
  - docs/models/auditeventfiltergreaterorequal.md
  - docs/models/auditeventfiltergreaterorequalmeta.md
  - docs/models/auditeventfiltergreaterthan.md
  - docs/models/auditeventfiltergreaterthanmeta.md
  - docs/models/auditeventfilterlike.md
  - docs/models/auditeventfilterlikemeta.md
  - docs/models/auditeventfilternotcontains.md
  - docs/models/auditeventfilternotcontainsmeta.md
  - docs/models/auditeventfilternotequals.md
  - docs/models/auditeventfilternotequalsmeta.md
  - docs/models/auditeventfilternotequalsresource.md
  - docs/models/auditeventfilternotequalstype.md
  - docs/models/auditeventfilternotlike.md
  - docs/models/auditeventfilternotlikemeta.md
  - docs/models/auditeventfilternotnull.md
  - docs/models/auditeventfilternotnullmeta.md
  - docs/models/auditeventfilternull.md
  - docs/models/auditeventfilternullmeta.md
  - docs/models/auditeventfiltersmallerorequal.md
  - docs/models/auditeventfiltersmallerorequalmeta.md
  - docs/models/auditeventfiltersmallerthan.md
  - docs/models/auditeventfiltersmallerthanmeta.md
  - docs/models/auditeventgetrequest.md
  - docs/models/auditeventgetresponse.md
  - docs/models/auditeventlist.md
  - docs/models/auditeventlistpagination.md
  - docs/models/auditeventlistrequest.md
  - docs/models/auditeventlistresponse.md
  - docs/models/auditeventmeta.md
  - docs/models/auditeventresource.md
  - docs/models/auditeventresource1.md
  - docs/models/auditeventsearch422responsebodyerror.md
  - docs/models/auditeventsearchcontains.md
  - docs/models/auditeventsearchcontainsmeta.md
  - docs/models/auditeventsearchequals.md
  - docs/models/auditeventsearchequalsmeta.md
  - docs/models/auditeventsearchfilter.md
  - docs/models/auditeventsearchgreaterorequal.md
  - docs/models/auditeventsearchgreaterorequalmeta.md
  - docs/models/auditeventsearchgreaterthan.md
  - docs/models/auditeventsearchgreaterthanmeta.md
  - docs/models/auditeventsearchlike.md
  - docs/models/auditeventsearchlikemeta.md
  - docs/models/auditeventsearchnotcontains.md
  - docs/models/auditeventsearchnotcontainsmeta.md
  - docs/models/auditeventsearchnotequals.md
  - docs/models/auditeventsearchnotequalsmeta.md
  - docs/models/auditeventsearchnotlike.md
  - docs/models/auditeventsearchnotlikemeta.md
  - docs/models/auditeventsearchnotnull.md
  - docs/models/auditeventsearchnotnullmeta.md
  - docs/models/auditeventsearchnull.md
  - docs/models/auditeventsearchnullmeta.md
  - docs/models/auditeventsearchpagination.md
  - docs/models/auditeventsearchrequest.md
  - docs/models/auditeventsearchrequestbody.md
  - docs/models/auditeventsearchresponse.md
  - docs/models/auditeventsearchresponseresponse.md
  - docs/models/auditeventsearchsmallerorequal.md
  - docs/models/auditeventsearchsmallerorequalmeta.md
  - docs/models/auditeventsearchsmallerthan.md
  - docs/models/auditeventsearchsmallerthanmeta.md
  - docs/models/auditeventtype.md
  - docs/models/auditeventtypedelete.md
  - docs/models/employee.md
  - docs/models/employeeaddress.md
  - docs/models/employeecreate.md
  - docs/models/employeecreate422responsebodyerror.md
  - docs/models/employeecreateaddress.md
  - docs/models/employeecreateexternal.md
  - docs/models/employeecreategender.md
  - docs/models/employeecreateresponse.md
  - docs/models/employeedeleterequest.md
  - docs/models/employeedeleteresponse.md
  - docs/models/employeeexternal.md
  - docs/models/employeefilter.md
  - docs/models/employeefiltercontains.md
  - docs/models/employeefiltercontainsaddress.md
  - docs/models/employeefiltercontainsexternal.md
  - docs/models/employeefiltercontainsmeta.md
  - docs/models/employeefilterequals.md
  - docs/models/employeefilterequalsaddress.md
  - docs/models/employeefilterequalsexternal.md
  - docs/models/employeefilterequalsgender.md
  - docs/models/employeefilterequalsmeta.md
  - docs/models/employeefiltergreaterorequal.md
  - docs/models/employeefiltergreaterorequaladdress.md
  - docs/models/employeefiltergreaterorequalexternal.md
  - docs/models/employeefiltergreaterorequalmeta.md
  - docs/models/employeefiltergreaterthan.md
  - docs/models/employeefiltergreaterthanaddress.md
  - docs/models/employeefiltergreaterthanexternal.md
  - docs/models/employeefiltergreaterthanmeta.md
  - docs/models/employeefilterlike.md
  - docs/models/employeefilterlikeaddress.md
  - docs/models/employeefilterlikeexternal.md
  - docs/models/employeefilterlikemeta.md
  - docs/models/employeefilternotcontains.md
  - docs/models/employeefilternotcontainsaddress.md
  - docs/models/employeefilternotcontainsexternal.md
  - docs/models/employeefilternotcontainsmeta.md
  - docs/models/employeefilternotequals.md
  - docs/models/employeefilternotequalsaddress.md
  - docs/models/employeefilternotequalsexternal.md
  - docs/models/employeefilternotequalsgender.md
  - docs/models/employeefilternotequalsmeta.md
  - docs/models/employeefilternotlike.md
  - docs/models/employeefilternotlikeaddress.md
  - docs/models/employeefilternotlikeexternal.md
  - docs/models/employeefilternotlikemeta.md
  - docs/models/employeefilternotnull.md
  - docs/models/employeefilternotnulladdress.md
  - docs/models/employeefilternotnullexternal.md
  - docs/models/employeefilternotnullmeta.md
  - docs/models/employeefilternull.md
  - docs/models/employeefilternulladdress.md
  - docs/models/employeefilternullexternal.md
  - docs/models/employeefilternullmeta.md
  - docs/models/employeefiltersmallerorequal.md
  - docs/models/employeefiltersmallerorequaladdress.md
  - docs/models/employeefiltersmallerorequalexternal.md
  - docs/models/employeefiltersmallerorequalmeta.md
  - docs/models/employeefiltersmallerthan.md
  - docs/models/employeefiltersmallerthanaddress.md
  - docs/models/employeefiltersmallerthanexternal.md
  - docs/models/employeefiltersmallerthanmeta.md
  - docs/models/employeegender.md
  - docs/models/employeegetrequest.md
  - docs/models/employeegetresponse.md
  - docs/models/employeelist.md
  - docs/models/employeelistpagination.md
  - docs/models/employeelistrequest.md
  - docs/models/employeelistresponse.md
  - docs/models/employeemeta.md
  - docs/models/employeeplacement.md
  - docs/models/employeeplacementcreate.md
  - docs/models/employeeplacementcreate422responsebodyerror.md
  - docs/models/employeeplacementcreateexternal.md
  - docs/models/employeeplacementcreateresponse.md
  - docs/models/employeeplacementdeleterequest.md
  - docs/models/employeeplacementdeleteresponse.md
  - docs/models/employeeplacementexternal.md
  - docs/models/employeeplacementfilter.md
  - docs/models/employeeplacementfiltercontains.md
  - docs/models/employeeplacementfiltercontainsexternal.md
  - docs/models/employeeplacementfiltercontainsmeta.md
  - docs/models/employeeplacementfilterequals.md
  - docs/models/employeeplacementfilterequalsexternal.md
  - docs/models/employeeplacementfilterequalsmeta.md
  - docs/models/employeeplacementfilterequalsroles.md
  - docs/models/employeeplacementfiltergreaterorequal.md
  - docs/models/employeeplacementfiltergreaterorequalexternal.md
  - docs/models/employeeplacementfiltergreaterorequalmeta.md
  - docs/models/employeeplacementfiltergreaterthan.md
  - docs/models/employeeplacementfiltergreaterthanexternal.md
  - docs/models/employeeplacementfiltergreaterthanmeta.md
  - docs/models/employeeplacementfilterlike.md
  - docs/models/employeeplacementfilterlikeexternal.md
  - docs/models/employeeplacementfilterlikemeta.md
  - docs/models/employeeplacementfilternotcontains.md
  - docs/models/employeeplacementfilternotcontainsexternal.md
  - docs/models/employeeplacementfilternotcontainsmeta.md
  - docs/models/employeeplacementfilternotequals.md
  - docs/models/employeeplacementfilternotequalsexternal.md
  - docs/models/employeeplacementfilternotequalsmeta.md
  - docs/models/employeeplacementfilternotequalsroles.md
  - docs/models/employeeplacementfilternotlike.md
  - docs/models/employeeplacementfilternotlikeexternal.md
  - docs/models/employeeplacementfilternotlikemeta.md
  - docs/models/employeeplacementfilternotnull.md
  - docs/models/employeeplacementfilternotnullexternal.md
  - docs/models/employeeplacementfilternotnullmeta.md
  - docs/models/employeeplacementfilternull.md
  - docs/models/employeeplacementfilternullexternal.md
  - docs/models/employeeplacementfilternullmeta.md
  - docs/models/employeeplacementfiltersmallerorequal.md
  - docs/models/employeeplacementfiltersmallerorequalexternal.md
  - docs/models/employeeplacementfiltersmallerorequalmeta.md
  - docs/models/employeeplacementfiltersmallerthan.md
  - docs/models/employeeplacementfiltersmallerthanexternal.md
  - docs/models/employeeplacementfiltersmallerthanmeta.md
  - docs/models/employeeplacementgetrequest.md
  - docs/models/employeeplacementgetresponse.md
  - docs/models/employeeplacementlist.md
  - docs/models/employeeplacementlistpagination.md
  - docs/models/employeeplacementlistrequest.md
  - docs/models/employeeplacementlistresponse.md
  - docs/models/employeeplacementmeta.md
  - docs/models/employeeplacementrole.md
  - docs/models/employeeplacementsearch422responsebodyerror.md
  - docs/models/employeeplacementsearchcontains.md
  - docs/models/employeeplacementsearchcontainsexternal.md
  - docs/models/employeeplacementsearchcontainsmeta.md
  - docs/models/employeeplacementsearchequals.md
  - docs/models/employeeplacementsearchequalsexternal.md
  - docs/models/employeeplacementsearchequalsmeta.md
  - docs/models/employeeplacementsearchfilter.md
  - docs/models/employeeplacementsearchgreaterorequal.md
  - docs/models/employeeplacementsearchgreaterorequalexternal.md
  - docs/models/employeeplacementsearchgreaterorequalmeta.md
  - docs/models/employeeplacementsearchgreaterthan.md
  - docs/models/employeeplacementsearchgreaterthanexternal.md
  - docs/models/employeeplacementsearchgreaterthanmeta.md
  - docs/models/employeeplacementsearchlike.md
  - docs/models/employeeplacementsearchlikeexternal.md
  - docs/models/employeeplacementsearchlikemeta.md
  - docs/models/employeeplacementsearchnotcontains.md
  - docs/models/employeeplacementsearchnotcontainsexternal.md
  - docs/models/employeeplacementsearchnotcontainsmeta.md
  - docs/models/employeeplacementsearchnotequals.md
  - docs/models/employeeplacementsearchnotequalsexternal.md
  - docs/models/employeeplacementsearchnotequalsmeta.md
  - docs/models/employeeplacementsearchnotlike.md
  - docs/models/employeeplacementsearchnotlikeexternal.md
  - docs/models/employeeplacementsearchnotlikemeta.md
  - docs/models/employeeplacementsearchnotnull.md
  - docs/models/employeeplacementsearchnotnullexternal.md
  - docs/models/employeeplacementsearchnotnullmeta.md
  - docs/models/employeeplacementsearchnull.md
  - docs/models/employeeplacementsearchnullexternal.md
  - docs/models/employeeplacementsearchnullmeta.md
  - docs/models/employeeplacementsearchpagination.md
  - docs/models/employeeplacementsearchrequest.md
  - docs/models/employeeplacementsearchrequestbody.md
  - docs/models/employeeplacementsearchresponse.md
  - docs/models/employeeplacementsearchresponseresponse.md
  - docs/models/employeeplacementsearchsmallerorequal.md
  - docs/models/employeeplacementsearchsmallerorequalexternal.md
  - docs/models/employeeplacementsearchsmallerorequalmeta.md
  - docs/models/employeeplacementsearchsmallerthan.md
  - docs/models/employeeplacementsearchsmallerthanexternal.md
  - docs/models/employeeplacementsearchsmallerthanmeta.md
  - docs/models/employeeplacementupdate.md
  - docs/models/employeeplacementupdate422responsebodyerror.md
  - docs/models/employeeplacementupdateexternal.md
  - docs/models/employeeplacementupdaterequest.md
  - docs/models/employeeplacementupdateresponse.md
  - docs/models/employeesearch422responsebodyerror.md
  - docs/models/employeesearchcontains.md
  - docs/models/employeesearchcontainsaddress.md
  - docs/models/employeesearchcontainsexternal.md
  - docs/models/employeesearchcontainsmeta.md
  - docs/models/employeesearchequals.md
  - docs/models/employeesearchequalsaddress.md
  - docs/models/employeesearchequalsexternal.md
  - docs/models/employeesearchequalsgender.md
  - docs/models/employeesearchequalsmeta.md
  - docs/models/employeesearchfilter.md
  - docs/models/employeesearchgreaterorequal.md
  - docs/models/employeesearchgreaterorequaladdress.md
  - docs/models/employeesearchgreaterorequalexternal.md
  - docs/models/employeesearchgreaterorequalmeta.md
  - docs/models/employeesearchgreaterthan.md
  - docs/models/employeesearchgreaterthanaddress.md
  - docs/models/employeesearchgreaterthanexternal.md
  - docs/models/employeesearchgreaterthanmeta.md
  - docs/models/employeesearchlike.md
  - docs/models/employeesearchlikeaddress.md
  - docs/models/employeesearchlikeexternal.md
  - docs/models/employeesearchlikemeta.md
  - docs/models/employeesearchnotcontains.md
  - docs/models/employeesearchnotcontainsaddress.md
  - docs/models/employeesearchnotcontainsexternal.md
  - docs/models/employeesearchnotcontainsmeta.md
  - docs/models/employeesearchnotequals.md
  - docs/models/employeesearchnotequalsaddress.md
  - docs/models/employeesearchnotequalsexternal.md
  - docs/models/employeesearchnotequalsgender.md
  - docs/models/employeesearchnotequalsmeta.md
  - docs/models/employeesearchnotlike.md
  - docs/models/employeesearchnotlikeaddress.md
  - docs/models/employeesearchnotlikeexternal.md
  - docs/models/employeesearchnotlikemeta.md
  - docs/models/employeesearchnotnull.md
  - docs/models/employeesearchnotnulladdress.md
  - docs/models/employeesearchnotnullexternal.md
  - docs/models/employeesearchnotnullmeta.md
  - docs/models/employeesearchnull.md
  - docs/models/employeesearchnulladdress.md
  - docs/models/employeesearchnullexternal.md
  - docs/models/employeesearchnullmeta.md
  - docs/models/employeesearchpagination.md
  - docs/models/employeesearchrequest.md
  - docs/models/employeesearchrequestbody.md
  - docs/models/employeesearchresponse.md
  - docs/models/employeesearchresponseresponse.md
  - docs/models/employeesearchsmallerorequal.md
  - docs/models/employeesearchsmallerorequaladdress.md
  - docs/models/employeesearchsmallerorequalexternal.md
  - docs/models/employeesearchsmallerorequalmeta.md
  - docs/models/employeesearchsmallerthan.md
  - docs/models/employeesearchsmallerthanaddress.md
  - docs/models/employeesearchsmallerthanexternal.md
  - docs/models/employeesearchsmallerthanmeta.md
  - docs/models/employeeupdate.md
  - docs/models/employeeupdate422responsebodyerror.md
  - docs/models/employeeupdateaddress.md
  - docs/models/employeeupdateexternal.md
  - docs/models/employeeupdategender.md
  - docs/models/employeeupdaterequest.md
  - docs/models/employeeupdateresponse.md
  - docs/models/equalsresourcerequestbody.md
  - docs/models/equalsrolesrequestbody.md
  - docs/models/equalstyperequestbody.md
  - docs/models/equalstypesrequestbody.md
  - docs/models/error400responsebodyerror.md
  - docs/models/error401responsebodyerror.md
  - docs/models/error403responsebodyerror.md
  - docs/models/error404responsebodyerror.md
  - docs/models/error409responsebodyerror.md
  - docs/models/error429responsebodyerror.md
  - docs/models/error500responsebodyerror.md
  - docs/models/errorcode.md
  - docs/models/gender.md
  - docs/models/group.md
  - docs/models/groupcategory.md
  - docs/models/groupcategory1.md
  - docs/models/groupcreate.md
  - docs/models/groupcreate422responsebodyerror.md
  - docs/models/groupcreatecategory.md
  - docs/models/groupcreateexternal.md
  - docs/models/groupcreateresponse.md
  - docs/models/groupdeleterequest.md
  - docs/models/groupdeleteresponse.md
  - docs/models/groupexternal.md
  - docs/models/groupfilter.md
  - docs/models/groupfiltercontains.md
  - docs/models/groupfiltercontainsexternal.md
  - docs/models/groupfiltercontainsmeta.md
  - docs/models/groupfilterequals.md
  - docs/models/groupfilterequalscategory.md
  - docs/models/groupfilterequalsexternal.md
  - docs/models/groupfilterequalsmeta.md
  - docs/models/groupfilterequalstypes.md
  - docs/models/groupfiltergreaterorequal.md
  - docs/models/groupfiltergreaterorequalexternal.md
  - docs/models/groupfiltergreaterorequalmeta.md
  - docs/models/groupfiltergreaterthan.md
  - docs/models/groupfiltergreaterthanexternal.md
  - docs/models/groupfiltergreaterthanmeta.md
  - docs/models/groupfilterlike.md
  - docs/models/groupfilterlikeexternal.md
  - docs/models/groupfilterlikemeta.md
  - docs/models/groupfilternotcontains.md
  - docs/models/groupfilternotcontainsexternal.md
  - docs/models/groupfilternotcontainsmeta.md
  - docs/models/groupfilternotequals.md
  - docs/models/groupfilternotequalscategory.md
  - docs/models/groupfilternotequalsexternal.md
  - docs/models/groupfilternotequalsmeta.md
  - docs/models/groupfilternotequalstypes.md
  - docs/models/groupfilternotlike.md
  - docs/models/groupfilternotlikeexternal.md
  - docs/models/groupfilternotlikemeta.md
  - docs/models/groupfilternotnull.md
  - docs/models/groupfilternotnullexternal.md
  - docs/models/groupfilternotnullmeta.md
  - docs/models/groupfilternull.md
  - docs/models/groupfilternullexternal.md
  - docs/models/groupfilternullmeta.md
  - docs/models/groupfiltersmallerorequal.md
  - docs/models/groupfiltersmallerorequalexternal.md
  - docs/models/groupfiltersmallerorequalmeta.md
  - docs/models/groupfiltersmallerthan.md
  - docs/models/groupfiltersmallerthanexternal.md
  - docs/models/groupfiltersmallerthanmeta.md
  - docs/models/groupgetrequest.md
  - docs/models/groupgetresponse.md
  - docs/models/grouplist.md
  - docs/models/grouplistpagination.md
  - docs/models/grouplistrequest.md
  - docs/models/grouplistresponse.md
  - docs/models/groupmeta.md
  - docs/models/groupsearch422responsebodyerror.md
  - docs/models/groupsearchcontains.md
  - docs/models/groupsearchcontainsexternal.md
  - docs/models/groupsearchcontainsmeta.md
  - docs/models/groupsearchequals.md
  - docs/models/groupsearchequalscategory.md
  - docs/models/groupsearchequalsexternal.md
  - docs/models/groupsearchequalsmeta.md
  - docs/models/groupsearchfilter.md
  - docs/models/groupsearchgreaterorequal.md
  - docs/models/groupsearchgreaterorequalexternal.md
  - docs/models/groupsearchgreaterorequalmeta.md
  - docs/models/groupsearchgreaterthan.md
  - docs/models/groupsearchgreaterthanexternal.md
  - docs/models/groupsearchgreaterthanmeta.md
  - docs/models/groupsearchlike.md
  - docs/models/groupsearchlikeexternal.md
  - docs/models/groupsearchlikemeta.md
  - docs/models/groupsearchnotcontains.md
  - docs/models/groupsearchnotcontainsexternal.md
  - docs/models/groupsearchnotcontainsmeta.md
  - docs/models/groupsearchnotequals.md
  - docs/models/groupsearchnotequalscategory.md
  - docs/models/groupsearchnotequalsexternal.md
  - docs/models/groupsearchnotequalsmeta.md
  - docs/models/groupsearchnotlike.md
  - docs/models/groupsearchnotlikeexternal.md
  - docs/models/groupsearchnotlikemeta.md
  - docs/models/groupsearchnotnull.md
  - docs/models/groupsearchnotnullexternal.md
  - docs/models/groupsearchnotnullmeta.md
  - docs/models/groupsearchnull.md
  - docs/models/groupsearchnullexternal.md
  - docs/models/groupsearchnullmeta.md
  - docs/models/groupsearchpagination.md
  - docs/models/groupsearchrequest.md
  - docs/models/groupsearchrequestbody.md
  - docs/models/groupsearchresponse.md
  - docs/models/groupsearchresponseresponse.md
  - docs/models/groupsearchsmallerorequal.md
  - docs/models/groupsearchsmallerorequalexternal.md
  - docs/models/groupsearchsmallerorequalmeta.md
  - docs/models/groupsearchsmallerthan.md
  - docs/models/groupsearchsmallerthanexternal.md
  - docs/models/groupsearchsmallerthanmeta.md
  - docs/models/grouptype.md
  - docs/models/groupupdate.md
  - docs/models/groupupdate422responsebodyerror.md
  - docs/models/groupupdateexternal.md
  - docs/models/groupupdaterequest.md
  - docs/models/groupupdateresponse.md
  - docs/models/guardian.md
  - docs/models/guardianaddress.md
  - docs/models/guardiancreate.md
  - docs/models/guardiancreate422responsebodyerror.md
  - docs/models/guardiancreateaddress.md
  - docs/models/guardiancreateexternal.md
  - docs/models/guardiancreateresponse.md
  - docs/models/guardiandeleterequest.md
  - docs/models/guardiandeleteresponse.md
  - docs/models/guardianexternal.md
  - docs/models/guardianfilter.md
  - docs/models/guardianfiltercontains.md
  - docs/models/guardianfiltercontainsaddress.md
  - docs/models/guardianfiltercontainsexternal.md
  - docs/models/guardianfiltercontainsmeta.md
  - docs/models/guardianfilterequals.md
  - docs/models/guardianfilterequalsaddress.md
  - docs/models/guardianfilterequalsexternal.md
  - docs/models/guardianfilterequalsmeta.md
  - docs/models/guardianfiltergreaterorequal.md
  - docs/models/guardianfiltergreaterorequaladdress.md
  - docs/models/guardianfiltergreaterorequalexternal.md
  - docs/models/guardianfiltergreaterorequalmeta.md
  - docs/models/guardianfiltergreaterthan.md
  - docs/models/guardianfiltergreaterthanaddress.md
  - docs/models/guardianfiltergreaterthanexternal.md
  - docs/models/guardianfiltergreaterthanmeta.md
  - docs/models/guardianfilterlike.md
  - docs/models/guardianfilterlikeaddress.md
  - docs/models/guardianfilterlikeexternal.md
  - docs/models/guardianfilterlikemeta.md
  - docs/models/guardianfilternotcontains.md
  - docs/models/guardianfilternotcontainsaddress.md
  - docs/models/guardianfilternotcontainsexternal.md
  - docs/models/guardianfilternotcontainsmeta.md
  - docs/models/guardianfilternotequals.md
  - docs/models/guardianfilternotequalsaddress.md
  - docs/models/guardianfilternotequalsexternal.md
  - docs/models/guardianfilternotequalsmeta.md
  - docs/models/guardianfilternotlike.md
  - docs/models/guardianfilternotlikeaddress.md
  - docs/models/guardianfilternotlikeexternal.md
  - docs/models/guardianfilternotlikemeta.md
  - docs/models/guardianfilternotnull.md
  - docs/models/guardianfilternotnulladdress.md
  - docs/models/guardianfilternotnullexternal.md
  - docs/models/guardianfilternotnullmeta.md
  - docs/models/guardianfilternull.md
  - docs/models/guardianfilternulladdress.md
  - docs/models/guardianfilternullexternal.md
  - docs/models/guardianfilternullmeta.md
  - docs/models/guardianfiltersmallerorequal.md
  - docs/models/guardianfiltersmallerorequaladdress.md
  - docs/models/guardianfiltersmallerorequalexternal.md
  - docs/models/guardianfiltersmallerorequalmeta.md
  - docs/models/guardianfiltersmallerthan.md
  - docs/models/guardianfiltersmallerthanaddress.md
  - docs/models/guardianfiltersmallerthanexternal.md
  - docs/models/guardianfiltersmallerthanmeta.md
  - docs/models/guardiangetrequest.md
  - docs/models/guardiangetresponse.md
  - docs/models/guardianlist.md
  - docs/models/guardianlistpagination.md
  - docs/models/guardianlistrequest.md
  - docs/models/guardianlistresponse.md
  - docs/models/guardianmeta.md
  - docs/models/guardiansearch422responsebodyerror.md
  - docs/models/guardiansearchcontains.md
  - docs/models/guardiansearchcontainsaddress.md
  - docs/models/guardiansearchcontainsexternal.md
  - docs/models/guardiansearchcontainsmeta.md
  - docs/models/guardiansearchequals.md
  - docs/models/guardiansearchequalsaddress.md
  - docs/models/guardiansearchequalsexternal.md
  - docs/models/guardiansearchequalsmeta.md
  - docs/models/guardiansearchfilter.md
  - docs/models/guardiansearchgreaterorequal.md
  - docs/models/guardiansearchgreaterorequaladdress.md
  - docs/models/guardiansearchgreaterorequalexternal.md
  - docs/models/guardiansearchgreaterorequalmeta.md
  - docs/models/guardiansearchgreaterthan.md
  - docs/models/guardiansearchgreaterthanaddress.md
  - docs/models/guardiansearchgreaterthanexternal.md
  - docs/models/guardiansearchgreaterthanmeta.md
  - docs/models/guardiansearchlike.md
  - docs/models/guardiansearchlikeaddress.md
  - docs/models/guardiansearchlikeexternal.md
  - docs/models/guardiansearchlikemeta.md
  - docs/models/guardiansearchnotcontains.md
  - docs/models/guardiansearchnotcontainsaddress.md
  - docs/models/guardiansearchnotcontainsexternal.md
  - docs/models/guardiansearchnotcontainsmeta.md
  - docs/models/guardiansearchnotequals.md
  - docs/models/guardiansearchnotequalsaddress.md
  - docs/models/guardiansearchnotequalsexternal.md
  - docs/models/guardiansearchnotequalsmeta.md
  - docs/models/guardiansearchnotlike.md
  - docs/models/guardiansearchnotlikeaddress.md
  - docs/models/guardiansearchnotlikeexternal.md
  - docs/models/guardiansearchnotlikemeta.md
  - docs/models/guardiansearchnotnull.md
  - docs/models/guardiansearchnotnulladdress.md
  - docs/models/guardiansearchnotnullexternal.md
  - docs/models/guardiansearchnotnullmeta.md
  - docs/models/guardiansearchnull.md
  - docs/models/guardiansearchnulladdress.md
  - docs/models/guardiansearchnullexternal.md
  - docs/models/guardiansearchnullmeta.md
  - docs/models/guardiansearchpagination.md
  - docs/models/guardiansearchrequest.md
  - docs/models/guardiansearchrequestbody.md
  - docs/models/guardiansearchresponse.md
  - docs/models/guardiansearchresponseresponse.md
  - docs/models/guardiansearchsmallerorequal.md
  - docs/models/guardiansearchsmallerorequaladdress.md
  - docs/models/guardiansearchsmallerorequalexternal.md
  - docs/models/guardiansearchsmallerorequalmeta.md
  - docs/models/guardiansearchsmallerthan.md
  - docs/models/guardiansearchsmallerthanaddress.md
  - docs/models/guardiansearchsmallerthanexternal.md
  - docs/models/guardiansearchsmallerthanmeta.md
  - docs/models/guardianupdate.md
  - docs/models/guardianupdate422responsebodyerror.md
  - docs/models/guardianupdateaddress.md
  - docs/models/guardianupdateexternal.md
  - docs/models/guardianupdaterequest.md
  - docs/models/guardianupdateresponse.md
  - docs/models/notequalsresourcerequestbody.md
  - docs/models/notequalsrolesrequestbody.md
  - docs/models/notequalstyperequestbody.md
  - docs/models/notequalstypesrequestbody.md
  - docs/models/school.md
  - docs/models/schoolcreate.md
  - docs/models/schoolcreate422responsebodyerror.md
  - docs/models/schoolcreateexternal.md
  - docs/models/schoolcreateresponse.md
  - docs/models/schoolcreateschooltype.md
  - docs/models/schoolexternal.md
  - docs/models/schoolfilter.md
  - docs/models/schoolfiltercontains.md
  - docs/models/schoolfiltercontainsexternal.md
  - docs/models/schoolfiltercontainsmeta.md
  - docs/models/schoolfilterequals.md
  - docs/models/schoolfilterequalsexternal.md
  - docs/models/schoolfilterequalsmeta.md
  - docs/models/schoolfilterequalsschooltype.md
  - docs/models/schoolfiltergreaterorequal.md
  - docs/models/schoolfiltergreaterorequalexternal.md
  - docs/models/schoolfiltergreaterorequalmeta.md
  - docs/models/schoolfiltergreaterthan.md
  - docs/models/schoolfiltergreaterthanexternal.md
  - docs/models/schoolfiltergreaterthanmeta.md
  - docs/models/schoolfilterlike.md
  - docs/models/schoolfilterlikeexternal.md
  - docs/models/schoolfilterlikemeta.md
  - docs/models/schoolfilternotcontains.md
  - docs/models/schoolfilternotcontainsexternal.md
  - docs/models/schoolfilternotcontainsmeta.md
  - docs/models/schoolfilternotequals.md
  - docs/models/schoolfilternotequalsexternal.md
  - docs/models/schoolfilternotequalsmeta.md
  - docs/models/schoolfilternotequalsschooltype.md
  - docs/models/schoolfilternotlike.md
  - docs/models/schoolfilternotlikeexternal.md
  - docs/models/schoolfilternotlikemeta.md
  - docs/models/schoolfilternotnull.md
  - docs/models/schoolfilternotnullexternal.md
  - docs/models/schoolfilternotnullmeta.md
  - docs/models/schoolfilternull.md
  - docs/models/schoolfilternullexternal.md
  - docs/models/schoolfilternullmeta.md
  - docs/models/schoolfiltersmallerorequal.md
  - docs/models/schoolfiltersmallerorequalexternal.md
  - docs/models/schoolfiltersmallerorequalmeta.md
  - docs/models/schoolfiltersmallerthan.md
  - docs/models/schoolfiltersmallerthanexternal.md
  - docs/models/schoolfiltersmallerthanmeta.md
  - docs/models/schoolgetrequest.md
  - docs/models/schoolgetresponse.md
  - docs/models/schoollist.md
  - docs/models/schoollistpagination.md
  - docs/models/schoollistrequest.md
  - docs/models/schoollistresponse.md
  - docs/models/schoolmeta.md
  - docs/models/schoolschooltype.md
  - docs/models/schoolsearch422responsebodyerror.md
  - docs/models/schoolsearchcontains.md
  - docs/models/schoolsearchcontainsexternal.md
  - docs/models/schoolsearchcontainsmeta.md
  - docs/models/schoolsearchequals.md
  - docs/models/schoolsearchequalsexternal.md
  - docs/models/schoolsearchequalsmeta.md
  - docs/models/schoolsearchequalsschooltype.md
  - docs/models/schoolsearchfilter.md
  - docs/models/schoolsearchgreaterorequal.md
  - docs/models/schoolsearchgreaterorequalexternal.md
  - docs/models/schoolsearchgreaterorequalmeta.md
  - docs/models/schoolsearchgreaterthan.md
  - docs/models/schoolsearchgreaterthanexternal.md
  - docs/models/schoolsearchgreaterthanmeta.md
  - docs/models/schoolsearchlike.md
  - docs/models/schoolsearchlikeexternal.md
  - docs/models/schoolsearchlikemeta.md
  - docs/models/schoolsearchnotcontains.md
  - docs/models/schoolsearchnotcontainsexternal.md
  - docs/models/schoolsearchnotcontainsmeta.md
  - docs/models/schoolsearchnotequals.md
  - docs/models/schoolsearchnotequalsexternal.md
  - docs/models/schoolsearchnotequalsmeta.md
  - docs/models/schoolsearchnotequalsschooltype.md
  - docs/models/schoolsearchnotlike.md
  - docs/models/schoolsearchnotlikeexternal.md
  - docs/models/schoolsearchnotlikemeta.md
  - docs/models/schoolsearchnotnull.md
  - docs/models/schoolsearchnotnullexternal.md
  - docs/models/schoolsearchnotnullmeta.md
  - docs/models/schoolsearchnull.md
  - docs/models/schoolsearchnullexternal.md
  - docs/models/schoolsearchnullmeta.md
  - docs/models/schoolsearchpagination.md
  - docs/models/schoolsearchrequest.md
  - docs/models/schoolsearchrequestbody.md
  - docs/models/schoolsearchresponse.md
  - docs/models/schoolsearchresponseresponse.md
  - docs/models/schoolsearchsmallerorequal.md
  - docs/models/schoolsearchsmallerorequalexternal.md
  - docs/models/schoolsearchsmallerorequalmeta.md
  - docs/models/schoolsearchsmallerthan.md
  - docs/models/schoolsearchsmallerthanexternal.md
  - docs/models/schoolsearchsmallerthanmeta.md
  - docs/models/schooltype.md
  - docs/models/schoolupdate.md
  - docs/models/schoolupdate422responsebodyerror.md
  - docs/models/schoolupdateexternal.md
  - docs/models/schoolupdaterequest.md
  - docs/models/schoolupdateresponse.md
  - docs/models/schoolyear.md
  - docs/models/security.md
  - docs/models/student.md
  - docs/models/studentaddress.md
  - docs/models/studentcreate.md
  - docs/models/studentcreate422responsebodyerror.md
  - docs/models/studentcreateaddress.md
  - docs/models/studentcreateexternal.md
  - docs/models/studentcreategender.md
  - docs/models/studentcreateresponse.md
  - docs/models/studentdeleterequest.md
  - docs/models/studentdeleteresponse.md
  - docs/models/studentexternal.md
  - docs/models/studentfilter.md
  - docs/models/studentfiltercontains.md
  - docs/models/studentfiltercontainsaddress.md
  - docs/models/studentfiltercontainsexternal.md
  - docs/models/studentfiltercontainsmeta.md
  - docs/models/studentfilterequals.md
  - docs/models/studentfilterequalsaddress.md
  - docs/models/studentfilterequalsexternal.md
  - docs/models/studentfilterequalsgender.md
  - docs/models/studentfilterequalsmeta.md
  - docs/models/studentfiltergreaterorequal.md
  - docs/models/studentfiltergreaterorequaladdress.md
  - docs/models/studentfiltergreaterorequalexternal.md
  - docs/models/studentfiltergreaterorequalmeta.md
  - docs/models/studentfiltergreaterthan.md
  - docs/models/studentfiltergreaterthanaddress.md
  - docs/models/studentfiltergreaterthanexternal.md
  - docs/models/studentfiltergreaterthanmeta.md
  - docs/models/studentfilterlike.md
  - docs/models/studentfilterlikeaddress.md
  - docs/models/studentfilterlikeexternal.md
  - docs/models/studentfilterlikemeta.md
  - docs/models/studentfilternotcontains.md
  - docs/models/studentfilternotcontainsaddress.md
  - docs/models/studentfilternotcontainsexternal.md
  - docs/models/studentfilternotcontainsmeta.md
  - docs/models/studentfilternotequals.md
  - docs/models/studentfilternotequalsaddress.md
  - docs/models/studentfilternotequalsexternal.md
  - docs/models/studentfilternotequalsgender.md
  - docs/models/studentfilternotequalsmeta.md
  - docs/models/studentfilternotlike.md
  - docs/models/studentfilternotlikeaddress.md
  - docs/models/studentfilternotlikeexternal.md
  - docs/models/studentfilternotlikemeta.md
  - docs/models/studentfilternotnull.md
  - docs/models/studentfilternotnulladdress.md
  - docs/models/studentfilternotnullexternal.md
  - docs/models/studentfilternotnullmeta.md
  - docs/models/studentfilternull.md
  - docs/models/studentfilternulladdress.md
  - docs/models/studentfilternullexternal.md
  - docs/models/studentfilternullmeta.md
  - docs/models/studentfiltersmallerorequal.md
  - docs/models/studentfiltersmallerorequaladdress.md
  - docs/models/studentfiltersmallerorequalexternal.md
  - docs/models/studentfiltersmallerorequalmeta.md
  - docs/models/studentfiltersmallerthan.md
  - docs/models/studentfiltersmallerthanaddress.md
  - docs/models/studentfiltersmallerthanexternal.md
  - docs/models/studentfiltersmallerthanmeta.md
  - docs/models/studentgender.md
  - docs/models/studentgetrequest.md
  - docs/models/studentgetresponse.md
  - docs/models/studentlist.md
  - docs/models/studentlistpagination.md
  - docs/models/studentlistrequest.md
  - docs/models/studentlistresponse.md
  - docs/models/studentmeta.md
  - docs/models/studentplacement.md
  - docs/models/studentplacementarchiverequest.md
  - docs/models/studentplacementarchiveresponse.md
  - docs/models/studentplacementcreate.md
  - docs/models/studentplacementcreate422responsebodyerror.md
  - docs/models/studentplacementcreateexternal.md
  - docs/models/studentplacementcreateresponse.md
  - docs/models/studentplacementcreateschooltype.md
  - docs/models/studentplacementcreateschoolyear.md
  - docs/models/studentplacementdeleterequest.md
  - docs/models/studentplacementdeleteresponse.md
  - docs/models/studentplacementexternal.md
  - docs/models/studentplacementfilter.md
  - docs/models/studentplacementfiltercontains.md
  - docs/models/studentplacementfiltercontainsexternal.md
  - docs/models/studentplacementfiltercontainsmeta.md
  - docs/models/studentplacementfilterequals.md
  - docs/models/studentplacementfilterequalsexternal.md
  - docs/models/studentplacementfilterequalsmeta.md
  - docs/models/studentplacementfilterequalsschooltype.md
  - docs/models/studentplacementfilterequalsschoolyear.md
  - docs/models/studentplacementfiltergreaterorequal.md
  - docs/models/studentplacementfiltergreaterorequalexternal.md
  - docs/models/studentplacementfiltergreaterorequalmeta.md
  - docs/models/studentplacementfiltergreaterthan.md
  - docs/models/studentplacementfiltergreaterthanexternal.md
  - docs/models/studentplacementfiltergreaterthanmeta.md
  - docs/models/studentplacementfilterlike.md
  - docs/models/studentplacementfilterlikeexternal.md
  - docs/models/studentplacementfilterlikemeta.md
  - docs/models/studentplacementfilternotcontains.md
  - docs/models/studentplacementfilternotcontainsexternal.md
  - docs/models/studentplacementfilternotcontainsmeta.md
  - docs/models/studentplacementfilternotequals.md
  - docs/models/studentplacementfilternotequalsexternal.md
  - docs/models/studentplacementfilternotequalsmeta.md
  - docs/models/studentplacementfilternotequalsschooltype.md
  - docs/models/studentplacementfilternotequalsschoolyear.md
  - docs/models/studentplacementfilternotlike.md
  - docs/models/studentplacementfilternotlikeexternal.md
  - docs/models/studentplacementfilternotlikemeta.md
  - docs/models/studentplacementfilternotnull.md
  - docs/models/studentplacementfilternotnullexternal.md
  - docs/models/studentplacementfilternotnullmeta.md
  - docs/models/studentplacementfilternull.md
  - docs/models/studentplacementfilternullexternal.md
  - docs/models/studentplacementfilternullmeta.md
  - docs/models/studentplacementfiltersmallerorequal.md
  - docs/models/studentplacementfiltersmallerorequalexternal.md
  - docs/models/studentplacementfiltersmallerorequalmeta.md
  - docs/models/studentplacementfiltersmallerthan.md
  - docs/models/studentplacementfiltersmallerthanexternal.md
  - docs/models/studentplacementfiltersmallerthanmeta.md
  - docs/models/studentplacementgetrequest.md
  - docs/models/studentplacementgetresponse.md
  - docs/models/studentplacementlist.md
  - docs/models/studentplacementlistpagination.md
  - docs/models/studentplacementlistrequest.md
  - docs/models/studentplacementlistresponse.md
  - docs/models/studentplacementmeta.md
  - docs/models/studentplacementrestorerequest.md
  - docs/models/studentplacementrestoreresponse.md
  - docs/models/studentplacementschooltype.md
  - docs/models/studentplacementschooltype1.md
  - docs/models/studentplacementschoolyear.md
  - docs/models/studentplacementsearch422responsebodyerror.md
  - docs/models/studentplacementsearchcontains.md
  - docs/models/studentplacementsearchcontainsexternal.md
  - docs/models/studentplacementsearchcontainsmeta.md
  - docs/models/studentplacementsearchequals.md
  - docs/models/studentplacementsearchequalsexternal.md
  - docs/models/studentplacementsearchequalsmeta.md
  - docs/models/studentplacementsearchequalsschooltype.md
  - docs/models/studentplacementsearchequalsschoolyear.md
  - docs/models/studentplacementsearchfilter.md
  - docs/models/studentplacementsearchgreaterorequal.md
  - docs/models/studentplacementsearchgreaterorequalexternal.md
  - docs/models/studentplacementsearchgreaterorequalmeta.md
  - docs/models/studentplacementsearchgreaterthan.md
  - docs/models/studentplacementsearchgreaterthanexternal.md
  - docs/models/studentplacementsearchgreaterthanmeta.md
  - docs/models/studentplacementsearchlike.md
  - docs/models/studentplacementsearchlikeexternal.md
  - docs/models/studentplacementsearchlikemeta.md
  - docs/models/studentplacementsearchnotcontains.md
  - docs/models/studentplacementsearchnotcontainsexternal.md
  - docs/models/studentplacementsearchnotcontainsmeta.md
  - docs/models/studentplacementsearchnotequals.md
  - docs/models/studentplacementsearchnotequalsexternal.md
  - docs/models/studentplacementsearchnotequalsmeta.md
  - docs/models/studentplacementsearchnotequalsschooltype.md
  - docs/models/studentplacementsearchnotequalsschoolyear.md
  - docs/models/studentplacementsearchnotlike.md
  - docs/models/studentplacementsearchnotlikeexternal.md
  - docs/models/studentplacementsearchnotlikemeta.md
  - docs/models/studentplacementsearchnotnull.md
  - docs/models/studentplacementsearchnotnullexternal.md
  - docs/models/studentplacementsearchnotnullmeta.md
  - docs/models/studentplacementsearchnull.md
  - docs/models/studentplacementsearchnullexternal.md
  - docs/models/studentplacementsearchnullmeta.md
  - docs/models/studentplacementsearchpagination.md
  - docs/models/studentplacementsearchrequest.md
  - docs/models/studentplacementsearchrequestbody.md
  - docs/models/studentplacementsearchresponse.md
  - docs/models/studentplacementsearchresponseresponse.md
  - docs/models/studentplacementsearchsmallerorequal.md
  - docs/models/studentplacementsearchsmallerorequalexternal.md
  - docs/models/studentplacementsearchsmallerorequalmeta.md
  - docs/models/studentplacementsearchsmallerthan.md
  - docs/models/studentplacementsearchsmallerthanexternal.md
  - docs/models/studentplacementsearchsmallerthanmeta.md
  - docs/models/studentplacementupdate.md
  - docs/models/studentplacementupdate422responsebodyerror.md
  - docs/models/studentplacementupdateexternal.md
  - docs/models/studentplacementupdaterequest.md
  - docs/models/studentplacementupdateresponse.md
  - docs/models/studentplacementupdateschooltype.md
  - docs/models/studentplacementupdateschoolyear.md
  - docs/models/studentsearch422responsebodyerror.md
  - docs/models/studentsearchcontains.md
  - docs/models/studentsearchcontainsaddress.md
  - docs/models/studentsearchcontainsexternal.md
  - docs/models/studentsearchcontainsmeta.md
  - docs/models/studentsearchequals.md
  - docs/models/studentsearchequalsaddress.md
  - docs/models/studentsearchequalsexternal.md
  - docs/models/studentsearchequalsgender.md
  - docs/models/studentsearchequalsmeta.md
  - docs/models/studentsearchfilter.md
  - docs/models/studentsearchgreaterorequal.md
  - docs/models/studentsearchgreaterorequaladdress.md
  - docs/models/studentsearchgreaterorequalexternal.md
  - docs/models/studentsearchgreaterorequalmeta.md
  - docs/models/studentsearchgreaterthan.md
  - docs/models/studentsearchgreaterthanaddress.md
  - docs/models/studentsearchgreaterthanexternal.md
  - docs/models/studentsearchgreaterthanmeta.md
  - docs/models/studentsearchlike.md
  - docs/models/studentsearchlikeaddress.md
  - docs/models/studentsearchlikeexternal.md
  - docs/models/studentsearchlikemeta.md
  - docs/models/studentsearchnotcontains.md
  - docs/models/studentsearchnotcontainsaddress.md
  - docs/models/studentsearchnotcontainsexternal.md
  - docs/models/studentsearchnotcontainsmeta.md
  - docs/models/studentsearchnotequals.md
  - docs/models/studentsearchnotequalsaddress.md
  - docs/models/studentsearchnotequalsexternal.md
  - docs/models/studentsearchnotequalsgender.md
  - docs/models/studentsearchnotequalsmeta.md
  - docs/models/studentsearchnotlike.md
  - docs/models/studentsearchnotlikeaddress.md
  - docs/models/studentsearchnotlikeexternal.md
  - docs/models/studentsearchnotlikemeta.md
  - docs/models/studentsearchnotnull.md
  - docs/models/studentsearchnotnulladdress.md
  - docs/models/studentsearchnotnullexternal.md
  - docs/models/studentsearchnotnullmeta.md
  - docs/models/studentsearchnull.md
  - docs/models/studentsearchnulladdress.md
  - docs/models/studentsearchnullexternal.md
  - docs/models/studentsearchnullmeta.md
  - docs/models/studentsearchpagination.md
  - docs/models/studentsearchrequest.md
  - docs/models/studentsearchrequestbody.md
  - docs/models/studentsearchresponse.md
  - docs/models/studentsearchresponseresponse.md
  - docs/models/studentsearchsmallerorequal.md
  - docs/models/studentsearchsmallerorequaladdress.md
  - docs/models/studentsearchsmallerorequalexternal.md
  - docs/models/studentsearchsmallerorequalmeta.md
  - docs/models/studentsearchsmallerthan.md
  - docs/models/studentsearchsmallerthanaddress.md
  - docs/models/studentsearchsmallerthanexternal.md
  - docs/models/studentsearchsmallerthanmeta.md
  - docs/models/studentupdate.md
  - docs/models/studentupdate422responsebodyerror.md
  - docs/models/studentupdateaddress.md
  - docs/models/studentupdateexternal.md
  - docs/models/studentupdategender.md
  - docs/models/studentupdaterequest.md
  - docs/models/studentupdateresponse.md
  - docs/models/utils/retryconfig.md
  - docs/sdks/auditevents/README.md
  - docs/sdks/employeeplacements/README.md
  - docs/sdks/employees/README.md
  - docs/sdks/groups/README.md
  - docs/sdks/guardians/README.md
  - docs/sdks/schools/README.md
  - docs/sdks/studentplacements/README.md
  - docs/sdks/students/README.md
  - py.typed
  - pylintrc
  - pyproject.toml
  - scripts/prepare_readme.py
  - scripts/publish.sh
  - src/meitner/__init__.py
  - src/meitner/_hooks/__init__.py
  - src/meitner/_hooks/sdkhooks.py
  - src/meitner/_hooks/types.py
  - src/meitner/_version.py
  - src/meitner/auditevents.py
  - src/meitner/basesdk.py
  - src/meitner/employeeplacements.py
  - src/meitner/employees.py
  - src/meitner/errors/__init__.py
  - src/meitner/errors/auditeventsearch422responsebody_error.py
  - src/meitner/errors/employeecreate422responsebody_error.py
  - src/meitner/errors/employeeplacementcreate422responsebody_error.py
  - src/meitner/errors/employeeplacementsearch422responsebody_error.py
  - src/meitner/errors/employeeplacementupdate422responsebody_error.py
  - src/meitner/errors/employeesearch422responsebody_error.py
  - src/meitner/errors/employeeupdate422responsebody_error.py
  - src/meitner/errors/error400responsebody.py
  - src/meitner/errors/error401responsebody.py
  - src/meitner/errors/error403responsebody.py
  - src/meitner/errors/error404responsebody.py
  - src/meitner/errors/error409responsebody.py
  - src/meitner/errors/error429responsebody.py
  - src/meitner/errors/error500responsebody.py
  - src/meitner/errors/groupcreate422responsebody_error.py
  - src/meitner/errors/groupsearch422responsebody_error.py
  - src/meitner/errors/groupupdate422responsebody_error.py
  - src/meitner/errors/guardiancreate422responsebody_error.py
  - src/meitner/errors/guardiansearch422responsebody_error.py
  - src/meitner/errors/guardianupdate422responsebody_error.py
  - src/meitner/errors/meitnerdefaulterror.py
  - src/meitner/errors/meitnererror.py
  - src/meitner/errors/no_response_error.py
  - src/meitner/errors/responsevalidationerror.py
  - src/meitner/errors/schoolcreate422responsebody_error.py
  - src/meitner/errors/schoolsearch422responsebody_error.py
  - src/meitner/errors/schoolupdate422responsebody_error.py
  - src/meitner/errors/studentcreate422responsebody_error.py
  - src/meitner/errors/studentplacementcreate422responsebody_error.py
  - src/meitner/errors/studentplacementsearch422responsebody_error.py
  - src/meitner/errors/studentplacementupdate422responsebody_error.py
  - src/meitner/errors/studentsearch422responsebody_error.py
  - src/meitner/errors/studentupdate422responsebody_error.py
  - src/meitner/groups.py
  - src/meitner/guardians.py
  - src/meitner/httpclient.py
  - src/meitner/models/__init__.py
  - src/meitner/models/auditevent.py
  - src/meitner/models/auditeventfilter.py
  - src/meitner/models/auditeventgetop.py
  - src/meitner/models/auditeventlist.py
  - src/meitner/models/auditeventlistop.py
  - src/meitner/models/auditeventresource.py
  - src/meitner/models/auditeventsearch422responsebody_error.py
  - src/meitner/models/auditeventsearch_requestbody.py
  - src/meitner/models/auditeventsearch_response.py
  - src/meitner/models/auditeventsearchop.py
  - src/meitner/models/auditeventtype.py
  - src/meitner/models/employee.py
  - src/meitner/models/employeecreate.py
  - src/meitner/models/employeecreate422responsebody_error.py
  - src/meitner/models/employeecreateop.py
  - src/meitner/models/employeedeleteop.py
  - src/meitner/models/employeefilter.py
  - src/meitner/models/employeegetop.py
  - src/meitner/models/employeelist.py
  - src/meitner/models/employeelistop.py
  - src/meitner/models/employeeplacement.py
  - src/meitner/models/employeeplacementcreate.py
  - src/meitner/models/employeeplacementcreate422responsebody_error.py
  - src/meitner/models/employeeplacementcreateop.py
  - src/meitner/models/employeeplacementdeleteop.py
  - src/meitner/models/employeeplacementfilter.py
  - src/meitner/models/employeeplacementgetop.py
  - src/meitner/models/employeeplacementlist.py
  - src/meitner/models/employeeplacementlistop.py
  - src/meitner/models/employeeplacementrole.py
  - src/meitner/models/employeeplacementsearch422responsebody_error.py
  - src/meitner/models/employeeplacementsearch_requestbody.py
  - src/meitner/models/employeeplacementsearch_response.py
  - src/meitner/models/employeeplacementsearchop.py
  - src/meitner/models/employeeplacementupdate.py
  - src/meitner/models/employeeplacementupdate422responsebody_error.py
  - src/meitner/models/employeeplacementupdateop.py
  - src/meitner/models/employeesearch422responsebody_error.py
  - src/meitner/models/employeesearch_requestbody.py
  - src/meitner/models/employeesearch_response.py
  - src/meitner/models/employeesearchop.py
  - src/meitner/models/employeeupdate.py
  - src/meitner/models/employeeupdate422responsebody_error.py
  - src/meitner/models/employeeupdateop.py
  - src/meitner/models/error400responsebody.py
  - src/meitner/models/error401responsebody.py
  - src/meitner/models/error403responsebody.py
  - src/meitner/models/error404responsebody.py
  - src/meitner/models/error409responsebody.py
  - src/meitner/models/error429responsebody.py
  - src/meitner/models/error500responsebody.py
  - src/meitner/models/errorcode.py
  - src/meitner/models/gender.py
  - src/meitner/models/group.py
  - src/meitner/models/groupcategory.py
  - src/meitner/models/groupcreate.py
  - src/meitner/models/groupcreate422responsebody_error.py
  - src/meitner/models/groupcreateop.py
  - src/meitner/models/groupdeleteop.py
  - src/meitner/models/groupfilter.py
  - src/meitner/models/groupgetop.py
  - src/meitner/models/grouplist.py
  - src/meitner/models/grouplistop.py
  - src/meitner/models/groupsearch422responsebody_error.py
  - src/meitner/models/groupsearch_requestbody.py
  - src/meitner/models/groupsearch_response.py
  - src/meitner/models/groupsearchop.py
  - src/meitner/models/grouptype.py
  - src/meitner/models/groupupdate.py
  - src/meitner/models/groupupdate422responsebody_error.py
  - src/meitner/models/groupupdateop.py
  - src/meitner/models/guardian.py
  - src/meitner/models/guardiancreate.py
  - src/meitner/models/guardiancreate422responsebody_error.py
  - src/meitner/models/guardiancreateop.py
  - src/meitner/models/guardiandeleteop.py
  - src/meitner/models/guardianfilter.py
  - src/meitner/models/guardiangetop.py
  - src/meitner/models/guardianlist.py
  - src/meitner/models/guardianlistop.py
  - src/meitner/models/guardiansearch422responsebody_error.py
  - src/meitner/models/guardiansearch_requestbody.py
  - src/meitner/models/guardiansearch_response.py
  - src/meitner/models/guardiansearchop.py
  - src/meitner/models/guardianupdate.py
  - src/meitner/models/guardianupdate422responsebody_error.py
  - src/meitner/models/guardianupdateop.py
  - src/meitner/models/school.py
  - src/meitner/models/schoolcreate.py
  - src/meitner/models/schoolcreate422responsebody_error.py
  - src/meitner/models/schoolcreateop.py
  - src/meitner/models/schoolfilter.py
  - src/meitner/models/schoolgetop.py
  - src/meitner/models/schoollist.py
  - src/meitner/models/schoollistop.py
  - src/meitner/models/schoolsearch422responsebody_error.py
  - src/meitner/models/schoolsearch_requestbody.py
  - src/meitner/models/schoolsearch_response.py
  - src/meitner/models/schoolsearchop.py
  - src/meitner/models/schooltype.py
  - src/meitner/models/schoolupdate.py
  - src/meitner/models/schoolupdate422responsebody_error.py
  - src/meitner/models/schoolupdateop.py
  - src/meitner/models/schoolyear.py
  - src/meitner/models/security.py
  - src/meitner/models/student.py
  - src/meitner/models/studentcreate.py
  - src/meitner/models/studentcreate422responsebody_error.py
  - src/meitner/models/studentcreateop.py
  - src/meitner/models/studentdeleteop.py
  - src/meitner/models/studentfilter.py
  - src/meitner/models/studentgetop.py
  - src/meitner/models/studentlist.py
  - src/meitner/models/studentlistop.py
  - src/meitner/models/studentplacement.py
  - src/meitner/models/studentplacementarchiveop.py
  - src/meitner/models/studentplacementcreate.py
  - src/meitner/models/studentplacementcreate422responsebody_error.py
  - src/meitner/models/studentplacementcreateop.py
  - src/meitner/models/studentplacementdeleteop.py
  - src/meitner/models/studentplacementfilter.py
  - src/meitner/models/studentplacementgetop.py
  - src/meitner/models/studentplacementlist.py
  - src/meitner/models/studentplacementlistop.py
  - src/meitner/models/studentplacementrestoreop.py
  - src/meitner/models/studentplacementschooltype.py
  - src/meitner/models/studentplacementsearch422responsebody_error.py
  - src/meitner/models/studentplacementsearch_requestbody.py
  - src/meitner/models/studentplacementsearch_response.py
  - src/meitner/models/studentplacementsearchop.py
  - src/meitner/models/studentplacementupdate.py
  - src/meitner/models/studentplacementupdate422responsebody_error.py
  - src/meitner/models/studentplacementupdateop.py
  - src/meitner/models/studentsearch422responsebody_error.py
  - src/meitner/models/studentsearch_requestbody.py
  - src/meitner/models/studentsearch_response.py
  - src/meitner/models/studentsearchop.py
  - src/meitner/models/studentupdate.py
  - src/meitner/models/studentupdate422responsebody_error.py
  - src/meitner/models/studentupdateop.py
  - src/meitner/py.typed
  - src/meitner/schools.py
  - src/meitner/sdk.py
  - src/meitner/sdkconfiguration.py
  - src/meitner/studentplacements.py
  - src/meitner/students.py
  - src/meitner/types/__init__.py
  - src/meitner/types/basemodel.py
  - src/meitner/utils/__init__.py
  - src/meitner/utils/annotations.py
  - src/meitner/utils/datetimes.py
  - src/meitner/utils/enums.py
  - src/meitner/utils/eventstreaming.py
  - src/meitner/utils/forms.py
  - src/meitner/utils/headers.py
  - src/meitner/utils/logger.py
  - src/meitner/utils/metadata.py
  - src/meitner/utils/queryparams.py
  - src/meitner/utils/requestbodies.py
  - src/meitner/utils/retries.py
  - src/meitner/utils/security.py
  - src/meitner/utils/serializers.py
  - src/meitner/utils/unmarshal_json_response.py
  - src/meitner/utils/url.py
  - src/meitner/utils/values.py
examples:
  SchoolList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  SchoolCreate:
    requestExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for School Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
    errorExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for School Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  SchoolSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for School Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "title": ["example"], "unitCode": ["example"], "csnSchoolCode": ["example"], "municipalityCode": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example", "unitCode": "example", "csnSchoolCode": "example", "municipalityCode": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "unitCode": true, "csnSchoolCode": true, "municipalityCode": true}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for School Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  SchoolGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  SchoolUpdate:
    requestExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for School Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184", "schoolType": "GR"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "Meitner Grundskola", "unitCode": "12345678", "csnSchoolCode": "12345", "municipalityCode": "0184"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for School Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GroupList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GroupCreate:
    requestExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Group Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
    errorExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Group Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GroupSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Group Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "title": "example", "moderatorIDs": "123e4567-e89b-12d3-a456-426614174000", "memberIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "title": ["example"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "title": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "types": true, "moderatorIDs": true, "memberIDs": true}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Group Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GroupGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GroupDelete:
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GroupUpdate:
    requestExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Group Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "schoolID": "123e4567-e89b-12d3-a456-426614174000", "category": "Education", "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "title": "1A", "types": ["Class"], "moderatorIDs": ["123e4567-e89b-12d3-a456-426614174000"], "memberIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Group Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeeList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeeCreate:
    requestExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Employee Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
    errorExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Employee Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeeSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Employee Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Employee Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeeGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeeDelete:
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeeUpdate:
    requestExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Employee Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Employee Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeePlacementList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeePlacementCreate:
    requestExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for EmployeePlacement Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for EmployeePlacement Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeePlacementSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for EmployeePlacement Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "example", "title": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "employeeID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "signature": ["example"], "title": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "signature": "example", "title": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "signature": true, "title": true, "roles": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for EmployeePlacement Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeePlacementGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeePlacementDelete:
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  EmployeePlacementUpdate:
    requestExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for EmployeePlacement Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "employeeID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "signature": "LM", "title": "Principal", "roles": ["Admin"], "startDate": "2024-08-01", "endDate": "2024-08-01"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for EmployeePlacement Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GuardianList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GuardianCreate:
    requestExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Guardian Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
    errorExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Guardian Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GuardianSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Guardian Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example", "studentIDs": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"], "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true, "studentIDs": true}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Guardian Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GuardianGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GuardianDelete:
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  GuardianUpdate:
    requestExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Guardian Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "+46701234567", "studentIDs": ["123e4567-e89b-12d3-a456-426614174000"]}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Guardian Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentCreate:
    requestExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Student Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
    errorExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Student Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Student Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "identityTemporary": true, "firstName": "example", "lastName": "example", "dateOfBirth": "2024-01-15", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "dateOfBirth": "2024-01-15"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "identityNumber": ["example"], "identityTemporary": [true], "firstName": ["example"], "lastName": ["example"], "dateOfBirth": ["2024-01-15"], "address": {"postalAddress": ["example"], "postalCode": ["example"], "postalCity": ["example"], "countryCode": ["example"], "municipalityCode": ["example"]}, "emailAddress1": ["example"], "emailAddress2": ["example"], "phoneNumber1": ["example"], "phoneNumber2": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "identityNumber": "example", "firstName": "example", "lastName": "example", "address": {"postalAddress": "example", "postalCode": "example", "postalCity": "example", "countryCode": "example", "municipalityCode": "example"}, "emailAddress1": "example", "emailAddress2": "example", "phoneNumber1": "example", "phoneNumber2": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "gender": true, "dateOfBirth": true, "address": {"postalAddress": true, "postalCode": true, "postalCity": true, "countryCode": true, "municipalityCode": true}, "emailAddress1": true, "emailAddress2": true, "phoneNumber1": true, "phoneNumber2": true}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Student Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentDelete:
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentUpdate:
    requestExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Student Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "gender": "Female", "identityNumber": "20191216-1234", "identityTemporary": true, "firstName": "Lise", "lastName": "Meitner", "dateOfBirth": "2019-12-16", "address": {"postalAddress": "Dalvägen 14", "postalCode": "169 56", "postalCity": "Solna", "countryCode": "SWE", "municipalityCode": "0184"}, "emailAddress1": "lise@meitner.se", "emailAddress2": "lise@gmail.com", "phoneNumber1": "+46701234567", "phoneNumber2": "example"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for Student Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementCreate:
    requestExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for StudentPlacement Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "201":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for StudentPlacement Create endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for StudentPlacement Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "external": {"sourceID": "example", "source": "example"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "hasChildcare": true, "motherTongue": "example", "startDate": "2024-01-15", "endDate": "2024-01-15", "archiveYear": "example", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "startDate": "2024-01-15", "endDate": "2024-01-15", "archivedAt": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "external": {"sourceID": ["example"], "source": ["example"]}, "studentID": ["123e4567-e89b-12d3-a456-426614174000"], "schoolID": ["123e4567-e89b-12d3-a456-426614174000"], "hasChildcare": [true], "motherTongue": ["example"], "startDate": ["2024-01-15"], "endDate": ["2024-01-15"], "archiveYear": ["example"]}, "like": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "notLike": {"external": {"sourceID": "example", "source": "example"}, "motherTongue": "example", "archiveYear": "example"}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}, "external": {"sourceID": true, "source": true}, "schoolYear": true, "motherTongue": true, "endDate": true, "archiveYear": true, "archivedAt": true}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for StudentPlacement Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementDelete:
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementUpdate:
    requestExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for StudentPlacement Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        application/json: {"external": {"sourceID": "12345678"}, "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01"}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for StudentPlacement Update endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementArchive:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  StudentPlacementRestore:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "external": {"sourceID": "12345678", "source": "ExternalIntegrationAPI"}, "studentID": "123e4567-e89b-12d3-a456-426614174000", "schoolID": "123e4567-e89b-12d3-a456-426614174000", "schoolType": "GR", "schoolYear": "1", "hasChildcare": true, "motherTongue": "SWE", "startDate": "2024-08-01", "endDate": "2025-08-01", "archiveYear": "2024_2025", "archivedAt": "2024-08-01T00:00:00Z"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  AuditEventList:
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "timestamp": "2024-08-01T00:00:00Z", "resource": "Student", "resourceID": "123e4567-e89b-12d3-a456-426614174000", "type": "Delete"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  AuditEventSearch:
    requestExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "timestamp": "2024-08-01T00:00:00Z", "resource": "Student", "resourceID": "123e4567-e89b-12d3-a456-426614174000", "type": "Delete"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for AuditEvent Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    responseExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "orCondition": true}}
      responses:
        "200":
          application/json: {"data": [{"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "timestamp": "2024-08-01T00:00:00Z", "resource": "Student", "resourceID": "123e4567-e89b-12d3-a456-426614174000", "type": "Delete"}], "pagination": {"offset": 0, "limit": 1, "total": 100}}
    errorExample:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "orCondition": true}}
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
    validationError:
      parameters:
        query:
          limit: 1
          offset: 0
      requestBody:
        application/json: {"filter": {"equals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "notEquals": {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "123e4567-e89b-12d3-a456-426614174000", "updatedAt": "2024-01-15T10:30:00Z", "updatedBy": "123e4567-e89b-12d3-a456-426614174000"}, "timestamp": "2024-01-15T10:30:00Z", "resourceID": "123e4567-e89b-12d3-a456-426614174000"}, "greaterThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerThan": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "greaterOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "smallerOrEqual": {"meta": {"createdAt": "2024-01-15T10:30:00Z", "updatedAt": "2024-01-15T10:30:00Z"}, "timestamp": "2024-01-15T10:30:00Z"}, "contains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "notContains": {"id": ["123e4567-e89b-12d3-a456-426614174000"], "meta": {"createdBy": ["123e4567-e89b-12d3-a456-426614174000"], "updatedBy": ["123e4567-e89b-12d3-a456-426614174000"]}, "resourceID": ["123e4567-e89b-12d3-a456-426614174000"]}, "null": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "notNull": {"meta": {"createdBy": true, "updatedAt": true, "updatedBy": true}}, "orCondition": true}}
      responses:
        "422":
          application/json: {"error": {"code": "UnprocessableEntity", "message": "Validation failed for AuditEvent Search endpoint", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
  AuditEventGet:
    responseExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"id": "123e4567-e89b-12d3-a456-426614174000", "meta": {"createdAt": "2024-01-15T10:30:00Z", "createdBy": "987fcdeb-51a2-43d1-b567-123456789abc", "updatedAt": "2024-01-15T14:45:00Z", "updatedBy": "987fcdeb-51a2-43d1-b567-123456789abc"}, "timestamp": "2024-08-01T00:00:00Z", "resource": "Student", "resourceID": "123e4567-e89b-12d3-a456-426614174000", "type": "Delete"}
    errorExample:
      parameters:
        path:
          id: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "400":
          application/json: {"error": {"code": "BadRequest", "message": "The request contains invalid parameters or malformed data", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "401":
          application/json: {"error": {"code": "Unauthorized", "message": "Authentication credentials are missing or invalid", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "403":
          application/json: {"error": {"code": "Forbidden", "message": "You do not have permission to perform this operation", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "404":
          application/json: {"error": {"code": "NotFound", "message": "The requested resource could not be found", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "409":
          application/json: {"error": {"code": "Conflict", "message": "The request conflicts with the current state of the resource", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "429":
          application/json: {"error": {"code": "RateLimited", "message": "Too many requests - rate limit exceeded", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
        "500":
          application/json: {"error": {"code": "Internal", "message": "An unexpected server error occurred", "requestID": "550e8400-e29b-41d4-a716-446655440000"}}
examplesVersion: 1.0.2
